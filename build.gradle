// Top-level build file where you can add configuration options common to all sub-projects/modules.

//apply from: "$gradleHost/master/init.gradle"
apply from: 'UICore/_gradle/init.gradle'

apply from: allGradle.saveStream
apply from: allGradle.statisticsWord
apply from: allGradle.excelMaterial
apply from: allGradle.mergeFile
apply from: allGradle.replaceRes
apply from: allGradle.parseXml
apply from: allGradle.excelToCsv
//apply from: allGradle.discardCache

//apply from: "$gradleHost/master/init.gradle"
//apply from: "$gradleHost/master/discardCache.gradle" //禁用缓存?

buildscript {
    /*ext {
        buildToolsVersion = "30.0.2"
        minSdkVersion = 21
        compileSdkVersion = 30
        targetSdkVersion = 30
        ndkVersion = "21.4.7075529"

        kotlin_version = "1.6.10"
    }*/
    repositories {
        //https://maven.aliyun.com/mvn/view
        //maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        //maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }

        //https://maven.aliyun.com/mvn/
        //central仓和jcenter仓的聚合仓
        //maven { url 'https://maven.aliyun.com/repository/public' }
        //maven { url 'https://maven.aliyun.com/repository/google' }
        //maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

        google()
        //jcenter()
        mavenCentral()
        maven { url 'https://jcenter.bintray.com' }

        //https://repo.maven.apache.org/maven2
        //https://repo1.maven.org/maven2/
    }
    dependencies {
        //7.x + Could not find method compile()
        //最后的版本 4.2.2/gradle-6.9-all
        // 7.0.4/gradle-7.1.1
        //https://developer.android.google.cn/studio/releases/gradle-plugin?hl=zh_cn#updating-gradle
        //https://mvnrepository.com/artifact/com.android.tools.build/gradle?repo=google
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //'kotlinx-serialization'
        //classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        classpath "io.objectbox:objectbox-gradle-plugin:$objectboxVersion"

        classpath "com.yanzhenjie.andserver:plugin:$andServerVersion"

        //https://repo1.maven.org/maven2/com/tencent/bugly/symtabfileuploader/
        classpath 'com.tencent.bugly:symtabfileuploader:2.2.1'
    }
}

allprojects {
    repositories {
        google()
        //jcenter()
        mavenCentral()
        maven { url 'https://jcenter.bintray.com' }

        //maven { url 'https://maven.aliyun.com/repository/public' }
        //maven { url 'https://maven.aliyun.com/repository/google' }
        //maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }

        //println google().url
        //println mavenCentral().url
        //maven { url 'https://maven.google.com' }

        maven { url 'https://jitpack.io' }

        //angcyo
        //maven { url "https://gitee.com/angcyo/maven/raw/master" }
        //maven { url "https://codechina.csdn.net/angcyo/maven/-/raw/master" }
        //maven { url "https://gitlab.com/angcyo/maven/-/raw/master" }
        //maven { url file('E:/AndroidProjects/maven') }
        //maven { url "https://gitcode.net/angcyo/maven/-/raw/master" }
        //maven { url "https://gitcode.net/angcyo/maven/-/raw/hingin" }

        def os = System.getProperty("os.name")
        def osName = os.toLowerCase()
        def userName = System.getProperty("user.name")
        //System.err.println("user:$userName os:$os") //user:angcyo os:Mac OS X //user:angcyo os:Windows 10
        if (userName == "angcyo" && osName.contains("windows")) {
            /*if (osName.contains("windows")) {
                maven { url "E:/AndroidProjects/maven" }
            } else {
                maven { url "/Users/angcyo/project/maven/hingin" }
            }*/
            maven { url "E:/AndroidProjects/maven" }
        } else {
            maven { url "https://gitcode.net/angcyo/maven/-/raw/hingin" }
        }

        //umeng/Luban
        maven { url 'https://repo1.maven.org/maven2/' }
        //maven { url 'http://dl.bintray.com/umsdk/release' }

        //huawei
        maven { url 'https://developer.huawei.com/repo/' }

        //RePlugin https://github.com/Qihoo360/RePlugin/
        maven {
            url "http://maven.geelib.360.cn/nexus/service/rest/repository/browse/replugin/"
            allowInsecureProtocol = true
        }

        //bmob
        //maven { url "https://raw.github.com/bmob/bmob-android-sdk/master" }
        //maven { url "https://gitee.com/angcyo/bmob-android-sdk/raw/master" }
        //maven { url "https://raw.github.com/bmob/bmob-android-sdk/master" }
        //maven { url "https://gitee.com/angcyo/bmob-android-sdk/raw/master" }
        maven { url 'https://dl.bintray.com/chaozhouzhang/maven' }

        //本地仓库依赖
        //maven { url = 'E:/maven' /*'E:/AndroidProjects/maven'}*/ }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
