def release_time = releaseTime()

ext {
    V_CODE = "1"
    V_NAME = "1.0.0($release_time)"
    APP_NAME = "UICoreDemo"
    schema = "demo"

    application_id = "com.angcyo.uicore.demo"

    //apk.gradle
    //可用参数: #an:app名字; #vn:版本名; #t:当天日期; #fn:风味名; #bn:编译类型名;
    //         #sn:使用的签名名称; #ka:使用的签名别名;
    apkName = "#an-#vn_#fn_#bn_#ka"
}
apply from: allGradle.app

//apply from: "$gradleHost/master/app.gradle"

android {
    defaultConfig {
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a', 'x86', 'arm64-v8a' //'armeabi-v7a', 'arm64-v8a'
            //'armeabi', 'armeabi-v7a', 'x86', 'x86_64'//, 'arm64-v8a'
            //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        resConfigs "zh", "en", "ja", "xhdpi"

        resValue "string", "CrashSightUrl", '"https://android.crashsight.qq.com/rqd/pb/async"'
        resValue "string", "CrashSightAppID", '"5d800f5f95"'

        //resValue "string", "base_api", '"http://121.36.149.100:9009/pecker-web"'
        //resValue "string", "custom_urls", '"测试 http://121.36.149.100:9009/pecker-web;正式 https://server.hingin.com/pecker-web"'
    }
    /*splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }*/
    /*sourceSets {
        main {
            if (rootProject.ext.model.ftBmpEditIsApp) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            }
        }
    }*/
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //http://mvnrepository.com/artifact/androidx.emoji/emoji
    debugImplementation "androidx.emoji:emoji:1.1.0"

    //https://developer.android.google.cn/topic/libraries/architecture/workmanager.html
    //http://mvnrepository.com/artifact/androidx.work
    def work_version = "2.8.1"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation project(allModule.material)
    implementation project(allModule.dslitem)
    implementation project(allModule.picker)
    implementation project(allModule.camera)
    implementation project(allModule.camerax)
    //implementation project(allModule.bmob)
    implementation project(allModule.qrcode)
    implementation project(allModule.tbs)
    implementation project(allModule.game)
    implementation project(allModule.github)
    implementation project(allModule.jsoup)
    implementation project(allModule.mpchart)
    implementation project(allModule.objectbox)
    implementation project(allModule.rabbitmq)
    implementation project(allModule.amap3d)
    implementation project(allModule.speech)
    implementation project(allModule.jpush)
    implementation project(allModule.bdtrace)
    implementation project(allModule.acc)
    implementation project(allModule.record)

    implementation project(allModule.bugly)
    implementation project(allModule.andserver)
    implementation project(allModule.bluetooth)
    implementation project(allModule.browser)
    //implementation project(allModule.engrave)
    implementation project(allModule.objectbox_lp)
    //implementation project(allModule.canvas_lp)//canvas
    implementation project(allModule.CrashSight)
    implementation project(allModule.umeng_lp)
    implementation project(allModule.doodle)
    implementation project(allModule.wifip2p)
    implementation project(allModule.crop)
    implementation project(allModule.websocket)
    //implementation project(allModule.engrave_auto)
    //implementation project(allModule.jsEngine)//The minCompileSdk (33) specified in a
    implementation project(allModule.deviceServer)
    implementation project(allModule.canvas2_lp)//canvas2 2023-3-3
    implementation project(allModule.engrave2)//2023-3-31

    //https://github.com/airbnb/lottie-android
    //http://airbnb.io/lottie
    //http://airbnb.io/lottie/#/android
    //https://lottiefiles.com/
    implementation 'com.airbnb.android:lottie:5.2.0'
}

//apply from: allGradle.v7a

apply plugin: 'kotlin-parcelize'
apply from: allGradle.objectBrowser // Apply last.

//amap 高德的配置不在 aar里面, 所以可以不需要在此配置
//apply from: allGradle.amap3d

//jpush 极光的配置在aar里面, 所以也需要在此配置
apply from: allGradle.jpush

apply from: allGradle.bugly

//2022-4-27
//apply from: allGradle.fscaar
apply from: allGradle.libumeng_lp


